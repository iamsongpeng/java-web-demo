<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>多文件上传</title>
<script type="text/javascript">
	
	// 实现方式1：innerHTML，此种实现方式有逻辑问题，如下：
	// appendChild是每次插入的内容都成为该元素的最后一个子元素。（插入）
	// innerHTML是整个重写该元素内的所有HTML代码，也就是说之前写的那些都会被覆盖。（覆盖）
	// 增加
	function addItem() {
		var uploadDiv = document.getElementById("uploadDiv");
		uploadDiv.innerHTML += '<div><input type="file" name="uploadfile"><a href="javascript:void(0)" onclick="delItem(this)">删除</a></div>';
	}
	 
	// 实现方式2：appendChild 和 createElement
	function addItem() {
		// 创建 div 标签
		var _div = document.createElement("div");
		// 创建 input 标签
		var _input = document.createElement("input");
		// 添加属性
		_input.setAttribute("type", "file");
		_input.setAttribute("name", "upload");
		// 创建 a 标签
		var _a = document.createElement("a");
		// 添加属性
		_a.setAttribute("href", "javascript:void(0)");
		_a.setAttribute("onclick", "delItem(this)");
		_a.innerHTML = "删除";
		
		_div.appendChild(_input);
		_div.appendChild(_a);
		document.getElementById("uploadDiv").appendChild(_div);
	}
	
	// 删除
	function delItem(_this) {
		document.getElementById("uploadDiv").removeChild(_this.parentNode);
	}
</script>
</head>
<body>
	<h2>多文件上传</h2>
	<form method="post" enctype="multipart/form-data" action="${pageContext.request.contextPath }/uploadFiles">
		<input type="button" value="添加附件" onclick="addItem()">
		<div id="uploadDiv">
		</div>
		<input type="submit" value="开始上传">
	</form>
</body>
</html>